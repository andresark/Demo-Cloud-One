#---------------------------------------------------------------------
# GitHub Actions to Protect CI/CD Pipelines
#
# Version      Date        Info
# 1.0          2020        Initial Version
#
# Made by Felipe Costa
#---------------------------------------------------------------------

name: Deep Security Smart Check

on: 
  push:
    branches: 
      - master
      
jobs:      
    SmartCheck-Scan-Action:
       runs-on: ubuntu-latest
       steps:
          - uses: actions/checkout@v2
          - name: Cloud One Conformity Pipeline Scanner
            uses: raphabot/conformity-template-scanner-pipeline@v16
            env:
              apikey: ${{ secrets.apikey }}
              acceptedQty: 10
              region: us-west-2
              template: s3.template.yaml
        # - name: Deep Security Smart Check Scan ECR
        #   uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.0
        #   with:
        #     DSSC_IMAGE_NAME: 650143975734.dkr.ecr.us-east-1.amazonaws.com/djangonv
        #     DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
        #     DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
        #     DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
        #     DSSC_IMAGE_PULL_AUTH: ${{ secrets.DSSC_IMAGE_PULL_AUTH }}
        #     DSSC_FINDINGS_THRESHOLD: '{"malware": 999, "vulnerabilities": { "defcon1": 999, "critical": 999, "high": 999 }, "contents": { "defcon1": 999, "critical": 999, "high": 999 }, "checklists": { "defcon1": 999, "critical": 999, "high": 999 }}'
        #     DSSC_INSECURE_SKIP_TLS_VERIFY: true
        #     DSSC_INSECURE_SKIP_REGISTRY_TLS_VERIFY: true
        # - name: Deep Security Smart Check Scan ACR
        #   uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.0
        #   with:
        #     DSSC_IMAGE_NAME: krish.azurecr.io/alpine
        #     DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
        #     DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
        #     DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
        #     DSSC_IMAGE_PULL_AUTH: '{"username": "${{ secrets.ACR_USER }}","password": "${{ secrets.ACR_PASSWORD }}"}'
        #     DSSC_FINDINGS_THRESHOLD: '{"malware": 999, "vulnerabilities": { "defcon1": 999, "critical": 999, "high": 999 }, "contents": { "defcon1": 999, "critical": 999, "high": 999 }, "checklists": { "defcon1": 999, "critical": 999, "high": 999 }}'
        #     DSSC_INSECURE_SKIP_TLS_VERIFY: true
        #     DSSC_INSECURE_SKIP_REGISTRY_TLS_VERIFY: true
