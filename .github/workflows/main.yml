#---------------------------------------------------------------------
# GitHub Actions to Protect CI/CD Pipelines
#
# Version      Date        Info
# 1.0          2019        Initial Version
#
# Made by Felipe Costa
#---------------------------------------------------------------------
name: Protect CI/CD Pipelines
env:
  AWS_REGION_NAME: "us-east-1"

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
    ci_pipeline:
       runs-on: ubuntu-latest

    steps:
    - name: Git clone our repository
    - uses: actions/checkout@v2
      
    - name: Source Code Test
      run: echo Source Code Test
      
    - name: Container Build
      run: docker build -t web-app:latest .
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: ${{ env.AWS_REGION_NAME }}
        
    - name: Login to ECR
      run: $(aws ecr get-login --no-include-email --region us-east-1)
      
    - name: Tag Docker Image
      run: docker tag web-app:latest ${{ secrets.ECR_LOGIN }}/web-app
      
    - name: Push Docker Image to ECR
      run: docker push ${{ secrets.ECR_LOGIN }}/web-app
      
    - name: Cloud One Container Image Scan
      run: echo Cloud One Container Image Scan
    
    cd_pipeline:
       runs-on: ubuntu-latest
       needs: [ci_pipeline]
    steps:
    	
	  - name: Configure my AWS Credentils
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}
    
    - name: Dev Tests
      run: echo Dev Tests
      
    - name: Unit Tests
      run: echo Unit Tests
      
    - name: Deploy Tests
      run: echo Deploy Tests
      
    - name: Deploy Cloud One Application Protection
      run: echo Deploy Cloud One Application Protection
      
    - name: Deploy
      run: echo Deploy to Fargate
      
    - name: Slack Notification
      run: wget https://github.com/felipecosta09/DSSC/blob/master/slack.py && chmod 777 scan.py && ./scan.py
      
		- name: Print nice message on completion of CD Pipeline
      run : echo "CD Pipeline part finished successfully"
