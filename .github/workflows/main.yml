#---------------------------------------------------------------------
# GitHub Actions to Protect CI/CD Pipelines
#
# Version      Date        Info
# 1.0          2020        Initial Version
#
# Made by Felipe Costa
#---------------------------------------------------------------------

name: PreRegistry-Pipeline

on: 
  push:
    branches: 
      - master
      
jobs:      
    Build:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2
          - name: Container Build
            run : cd django-app && docker build -t django-app .
          # - name: Cloud One Container Scan DockerHub - Djangonv
            # run: docker run -v /var/run/docker.sock:/var/run/docker.sock deepsecurity/smartcheck-scan-action --image-name=django-app --smartcheck-host=container-security.tmselabs.com --smartcheck-user=test --smartcheck-password=test123 --preregistry-scan --preregistry-host=${{ secrets.DSSC_PREREGISTRY_HOST }} --preregistry-user=${{ secrets.DSSC_PREREGISTRY_USER }} --preregistry-password=${{ secrets.DSSC_PREREGISTRY_PASSWORD }}
    Container_Scan:
       runs-on: ubuntu-latest
       needs: [Build]
       steps:
         - name: Cloud One Container Scan DockerHub - Djangonv
           uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.2
           with:
              DSSC_IMAGE_NAME: django-app
              DSSC_SMARTCHECK_HOST: container-security.tmselabs.com
              DSSC_SMARTCHECK_USER: test
              DSSC_SMARTCHECK_PASSWORD: test123
              DSSC_FINDINGS_THRESHOLD: '{"malware": 999, "vulnerabilities": { "defcon1": 999, "critical": 999, "high": 999 }, "contents": { "defcon1": 999, "critical": 999, "high": 999 }, "checklists": { "defcon1": 999, "critical": 999, "high": 999 }}'
              DSSC_PREREGISTRY_SCAN: true
              DSSC_PREREGISTRY_HOST: ${{ secrets.DSSC_PREREGISTRY_HOST }}
              DSSC_PREREGISTRY_USER: ${{ secrets.DSSC_PREREGISTRY_USER }}
              DSSC_PREREGISTRY_PASSWORD: ${{ secrets.DSSC_PREREGISTRY_PASSWORD }}
         - name: Cointainer Successfully Scanned
           run : echo "CI Pipeline part finished successfully"
    Push:
        runs-on: ubuntu-latest
        needs: [Container_Scan]
        steps:
          - uses: actions/checkout@v2
          - name: Docker Tag 
            run: docker tag django-app felipecosta09/django-app:latest
          - name: Docker Login  
            run: docker login -u felipecosta09 -p ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Container Push
            run : docker push felipecosta09/django-app:latest
         
