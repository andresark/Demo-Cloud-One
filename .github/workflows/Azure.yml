#---------------------------------------------------------------------
# GitHub Actions to Protect CI/CD Pipelines
#
# Version      Date        Info
# 1.0          2020        Initial Version
#
# Made by Felipe Costa
#---------------------------------------------------------------------

name: Azure-Pipeline

env:
  PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_API }}
  TREND_AP_KEY: ${{ secrets.TREND_AP_KEY }}
  TREND_AP_SECRET: ${{ secrets.TREND_AP_SECRET }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
  DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
  DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}

on: pull_request
      
jobs:
    Code_Scan:
       runs-on: ubuntu-latest
       steps:
         - name: Checkout repository
           run: echo "Code Scan"
    Dependency_Check:
       runs-on: ubuntu-latest
       needs: [Code_Scan]
       steps:
         - uses: actions/checkout@v2
         - name: Snyk Scan
           run: echo "Snyk Scan"      
    Build_and_Push:
        runs-on: ubuntu-latest
        needs: [Dependency_Check]
        steps:
          - uses: actions/checkout@v2
          - name: Container Build
            run : |
              cd django-app && docker build -t django-app:latest .
              cd ../java-app && docker build -t java-app:latest .
              cd ../node-app && docker build -t node-app:latest .
              cd ../dotnet-core-app && docker build -t dotnet-core-app:latest .
          - name: Tag Docker Image
            run: |
              docker tag django-app felipecosta09/django-app:latest
              docker tag java-app felipecosta09/java-app:latest
              docker tag node-app felipecosta09/node-app:latest
              docker tag dotnet-core-app felipecosta09/dotnet-core-app:latest
          - name: Docker Login  
            run: docker login -u felipecosta09 -p ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Push Docker Images to DockerHub
            run: |
              docker push felipecosta09/django-app:latest
              docker push felipecosta09/java-app:latest
              docker push felipecosta09/node-app:latest
              docker push felipecosta09/dotnet-core-app:latest
    Container_Scan:
       runs-on: ubuntu-latest
       needs: [Build_and_Push]
       steps:
         - name: Cloud One Container Scan DockerHub - Django
           uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.2
           with:
              DSSC_IMAGE_NAME: registry.hub.docker.com/felipecosta09/django-app
              DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
              DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
              DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
              DSSC_IMAGE_PULL_AUTH: '{"username": "${{ secrets.DOCKERHUB_USERNAME }}","password": "${{ secrets.DOCKERHUB_PASSWORD }}"}'
              DSSC_FINDINGS_THRESHOLD: '{"malware": 999, "vulnerabilities": { "defcon1": 999, "critical": 999, "high": 999 }, "contents": { "defcon1": 999, "critical": 999, "high": 999 }, "checklists": { "defcon1": 999, "critical": 999, "high": 999 }}'
              DSSC_INSECURE_SKIP_TLS_VERIFY: true
              DSSC_INSECURE_SKIP_REGISTRY_TLS_VERIFY: true                 
         - name: Cloud One Container Scan DockerHub - Java
           uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.2
           with:
              DSSC_IMAGE_NAME: registry.hub.docker.com/felipecosta09/java-app
              DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
              DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
              DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
              DSSC_IMAGE_PULL_AUTH: '{"username": "${{ secrets.DOCKERHUB_USERNAME }}","password": "${{ secrets.DOCKERHUB_PASSWORD }}"}'
              DSSC_FINDINGS_THRESHOLD: '{"malware": 999, "vulnerabilities": { "defcon1": 999, "critical": 999, "high": 999 }, "contents": { "defcon1": 999, "critical": 999, "high": 999 }, "checklists": { "defcon1": 999, "critical": 999, "high": 999 }}'
              DSSC_INSECURE_SKIP_TLS_VERIFY: true
              DSSC_INSECURE_SKIP_REGISTRY_TLS_VERIFY: true
         - name: Cloud One Container Scan DockerHub - NodeJS
           uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.2
           with:
              DSSC_IMAGE_NAME: registry.hub.docker.com/felipecosta09/node-app
              DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
              DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
              DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
              DSSC_IMAGE_PULL_AUTH: '{"username": "${{ secrets.DOCKERHUB_USERNAME }}","password": "${{ secrets.DOCKERHUB_PASSWORD }}"}'
              DSSC_FINDINGS_THRESHOLD: '{"malware": 999, "vulnerabilities": { "defcon1": 999, "critical": 999, "high": 999 }, "contents": { "defcon1": 999, "critical": 999, "high": 999 }, "checklists": { "defcon1": 999, "critical": 999, "high": 999 }}'
              DSSC_INSECURE_SKIP_TLS_VERIFY: true
              DSSC_INSECURE_SKIP_REGISTRY_TLS_VERIFY: true
         - name: Cloud One Container Scan DockerHub - .NET Core
           uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.2
           with:
              DSSC_IMAGE_NAME: registry.hub.docker.com/felipecosta09/dotnet-core-app
              DSSC_SMARTCHECK_HOST: ${{ secrets.DSSC_SMARTCHECK_HOST }}
              DSSC_SMARTCHECK_USER: ${{ secrets.DSSC_SMARTCHECK_USER }}
              DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
              DSSC_IMAGE_PULL_AUTH: '{"username": "${{ secrets.DOCKERHUB_USERNAME }}","password": "${{ secrets.DOCKERHUB_PASSWORD }}"}'
              DSSC_FINDINGS_THRESHOLD: '{"malware": 999, "vulnerabilities": { "defcon1": 999, "critical": 999, "high": 999 }, "contents": { "defcon1": 999, "critical": 999, "high": 999 }, "checklists": { "defcon1": 999, "critical": 999, "high": 999 }}'
              DSSC_INSECURE_SKIP_TLS_VERIFY: true
              DSSC_INSECURE_SKIP_REGISTRY_TLS_VERIFY: true
         - name: Cointainer Successfully Scanned
           run : echo "CI Pipeline part finished successfully"
    Dev_Tests:
        runs-on: ubuntu-latest
        needs: [Container_Scan]
        steps:
         - name: Dev Tests
           run: echo Dev Tests
      
         - name: Unit Tests
           run: echo Unit Tests
           
         - name: Dev Tests part finished successfully
           run : echo "Dev Tests part finished successfully"
    Deploy:
        runs-on: ubuntu-latest
        needs: [Dev_Tests]
        steps:
         - name: 'Login via Azure CLI'
           run: echo "Deploy to Azure"